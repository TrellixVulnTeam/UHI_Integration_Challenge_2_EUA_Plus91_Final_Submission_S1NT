{"version":3,"sources":["webpack:///src/app/pages/dashboard/book-appointment/book-appointment-routing.module.ts","webpack:///src/app/pages/dashboard/book-appointment/book-appointment.module.ts","webpack:///src/app/pages/dashboard/book-appointment/book-appointment.page.html","webpack:///src/app/pages/dashboard/book-appointment/book-appointment.page.ts"],"names":["routes","path","component","BookAppointmentPage","BookAppointmentPageRoutingModule","RouterModule","BookAppointmentPageModule","CommonModule","FormsModule","IonicModule","_router","_api","_commonService","activatedRoute","doctorInfo","availableTimeSlots","monthNames","date","Date","slot_date_option","getMonth","getDate","search_index","parseInt","snapshot","paramMap","get","transaction_id","undefined","navigate","sortDataFromArray","start_hh","start_mm","end_hh","end_mm","x","times","tt","i","hh","Math","floor","mm","end_min","end_hr","slice","k","push","setTimeout","start_time","getFullYear","searchResults","fulfillments","start","time","timestamp","end_time","end","sortTimeSLots","getHours","getMinutes","index","$","find","removeClass","addClass","time_slot_divs","time_slot","length","element","hasClass","html","slot_start_time","split","slot_end_time","param","details","presentLoading","init","subscribe","res","success","body","message","ack","status","err","console","error"],"mappings":"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lB,CAAhC,EAAqD,CAAC,MAAOD,MAAR,EAAiBC,KAAjB,CAAuB,CAAC,CAAxB,IAA6B,GAA7B,GAAmC,CAAC,MAAMF,OAAP,EAAgBE,KAAhB,CAAsB,CAAC,CAAvB,CAAxF,CAAX;AACD;AACF,iBAlDH,CAmDE;AACA;;AACD;;AACDR,gBAAE,GAAGA,EAAE,GAAGF,CAAV;AACD;;AAED,iBAAI,IAAIW,CAAR,IAAaV,KAAb,EACA;AACE,mBAAKrB,kBAAL,CAAwBgC,IAAxB,CAA6BX,KAAK,CAACU,CAAD,CAAlC;AACD,aAvE0C,CAyE3C;AACA;;AACD,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAEA,6BAAiB;AAAA;;AAEf;AACAE,sBAAU,CAAC,YAAM;AACf,kBAAI/B,IAAI,GAAG,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","file":"src_app_pages_dashboard_book-appointment_book-appointment_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BookAppointmentPage } from './book-appointment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookAppointmentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BookAppointmentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BookAppointmentPageRoutingModule } from './book-appointment-routing.module';\n\nimport { BookAppointmentPage } from './book-appointment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BookAppointmentPageRoutingModule\n  ],\n  declarations: [BookAppointmentPage]\n})\nexport class BookAppointmentPageModule {}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Book Appointment</ion-title>\n    <ion-buttons slot=\"secondary\">\n      <ion-back-button defaultHref=\"/dashboard/search-results\"></ion-back-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <div class=\"container-fluid w-100 h-100 p-3\">\n  <!-- <ion-card *ngFor=\"let doctor of this._commonService.searchResults.fulfillments[this.search_index]\">\n    <ion-item class=\"border-0\" lines=\"none\">\n      <div class=\"h-100\" style=\"padding-top: 5px;padding-bottom: 5px;\">\n        <img [src]=\"doctor.agent.gender=='male'?'assets/male-doctor.png':'assets/female-doctor.png'\" alt=\"\" style=\"width: 60px;margin: 5px 15px 5px 0px;border-radius: 100%;\">\n      </div>\n      <ion-label>\n        {{doctor.agent.name}}<br>\n        <span class=\"text-muted\">Radiology{{doctor.doctor_service_type}}</span><br>\n        <span style=\"color: #3880ff;\"><b>doctor.hrp@hpr.abdm</b></span><br>\n        <ion-card-subtitle class=\"mt-2\">Marathi / Hindi / English<br>12 Yrs of Experience</ion-card-subtitle>\n      </ion-label>\n    </ion-item>\n    <ion-card-content class=\"m-0 p-2\">\n      <div class=\"d-flex flex-wrap justify-content-start\">\n        <span style=\"color: red; font-size: 18px; font-weight: 800;margin-left: 15px;\">{{doctor.quote.price.value}}/-<span style=\"font-size: 12px; font-weight:600;margin-left: 10px;color: var(--ion-color-primary);\">Medixcel</span></span>\n      </div>\n    </ion-card-content>\n  </ion-card> -->\n\n  <ion-card class=\"m-0 b-0 mb-3\">\n    <ion-item class=\"border-0\" lines=\"none\">\n      <div class=\"h-100\" style=\"padding-top: 5px;padding-bottom: 5px;\">\n        <img [src]=\"this._commonService.searchResults.fulfillments[this.search_index].agent.gender=='M'?'assets/male-doctor.png':'assets/female-doctor.png'\" alt=\"\" style=\"width: 60px;margin: 5px 15px 5px 0px;border-radius: 100%;\">\n      </div>\n      <ion-label>\n        {{ this._commonService.searchResults.fulfillments[this.search_index].agent.name }}<br>\n        <span class=\"text-muted\">{{ this._commonService.searchResults.fulfillments[this.search_index].type }} / {{this._commonService.searchResults.fulfillments[this.search_index].items.descriptor.name}} {{this._commonService.searchResults.fulfillments[this.search_index].agent.tags[\"@abdm/gov/in/education\"]?\"/\"+this._commonService.searchResults.fulfillments[this.search_index].agent.tags[\"@abdm/gov/in/education\"]:\"\"}}</span><br>\n        <span style=\"color: #3880ff;\"><b>{{this._commonService.searchResults.fulfillments[this.search_index].agent.tags[\"@abdm/gov/in/hpr_id\"]}}</b></span><br *ngIf=\"this._commonService.searchResults.fulfillments[this.search_index].agent.tags['@abdm/gov/in/hpr_id']\">\n        <ion-card-subtitle>{{this._commonService.searchResults.fulfillments[this.search_index].agent.tags[\"@abdm/gov/in/languages\"]}}<br>{{this._commonService.searchResults.fulfillments[this.search_index].agent.tags[\"@abdm/gov/in/experience\"]}}</ion-card-subtitle>\n      </ion-label>\n    </ion-item>\n  </ion-card>\n\n  <div class=\"w-100 d-block\" style=\"max-height: calc(100% - 106px - 64px);overflow: auto;\">\n    <div class=\"d-block col-12\" style=\"padding: 10px;\">\n      <div class=\"col-5 mt-2\">\n        <div class=\"form\">\n          <select class=\"form-select bg-primary text-white\" id=\"slotSelect\" aria-label=\"\">\n            <option class=\"bg-white text-dark\">Select Date</option>\n            <option class=\"bg-white text-dark\" value=\"1\" selected>{{slot_date_option}}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"d-block col-12 mt-4\">\n        <span class=\"text-muted\">Please choose one time slot from below</span>\n      </div>\n      <div class=\"col-12 d-block mt-1\" id=\"time_slots_div\">\n        <ion-chip outline color=\"primary\" *ngFor=\"let timeSlot of availableTimeSlots;index as i\" [id]=\"'time_slot'+i\" (click)=\"select_slots(i)\">\n          <ion-label>{{timeSlot[0]}} - {{timeSlot[1]}}</ion-label  >\n        </ion-chip>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"position-absolute start-0 bottom-0 px-3 d-block w-100\" style=\"padding: 10px;\">\n    <ion-button expand=\"full\" (click)=\"init()\">Book Now</ion-button>\n  </div>\n</div>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api/api.service';\nimport { CommonService } from 'src/app/services/common/common.service';\n\n@Component({\n  selector: 'app-book-appointment',\n  templateUrl: './book-appointment.page.html',\n  styleUrls: ['./book-appointment.page.scss'],\n})\nexport class BookAppointmentPage implements OnInit {\n\n  public search_index: any;\n  public searchResults: any;\n  public doctorInfo : any = [];\n  public availableTimeSlots : any = [];\n\n  public slot_date_option : any;\n  public monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  constructor(\n    public _router: Router,\n    public _api: ApiService,\n    public _commonService: CommonService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    var date = new Date();\n    this.slot_date_option = this.monthNames[date.getMonth()]+\" \"+date.getDate();\n    this.search_index = parseInt(this.activatedRoute.snapshot.paramMap.get('id'));\n    \n    if(this._commonService.transaction_id==null || this._commonService.transaction_id==undefined)\n    {\n      this._router.navigate([\"/dashboard/search-results\"]);\n    }\n  }\n\n  ngOnInit() {\n    this.sortDataFromArray();\n    // this.get_onSearchData();\n    // this.get_onSelectData();\n\n    // var x = 15; //minutes interval\n    // var times = []; // time array\n    // var tt = 0; // start time\n    \n    // //loop to increment the time and push results in array\n    // for (var i=0;tt<2*60; i++) {\n    //   var hh = Math.floor(tt/60);\n    //   console.log(\"hh\",hh);\n    //   var mm = (tt%60);\n    //   console.log(\"mm\",mm);\n    //   times[i] = (\"0\" + (hh)).slice(-2) + ':' + (\"0\" + mm).slice(-2);\n    //   tt = tt + x;\n    // }\n    \n    // console.log(times);\n\n    // this.sortTimeSLots(16,30,18,0);\n  }\n\n  sortTimeSLots(start_hh,start_mm,end_hh,end_mm)\n  {\n    var x = 15; //minutes interval\n    var times = []; // time array\n    var tt = start_mm; // start time\n    \n    //loop to increment the time and push results in array\n    for (var i=0;tt<24*60; i++) {\n      var hh = Math.floor(tt/60);\n      var mm = (tt%60);\n      if(hh>=start_hh && hh<=end_hh)\n      {\n        if(hh==start_hh && mm>=start_mm)\n        {\n          // console.log(hh,mm)\n          // console.log(\"hh\",hh,start_hh);\n          // console.log(\"mm\",mm,start_mm);\n          // mm = (mm+x>=60)?0:mm+x;\n          // times[i] = [(\"0\" + (hh)).slice(-2) + ':' + (\"0\" + mm).slice(-2),(\"0\" + (hh)).slice(-2) + ':' + (\"0\" + mm).slice(-2)];\n          var end_min = mm+x;\n            var end_hr = hh;\n            if(end_min>=60)\n            {\n              end_hr+=1;\n              end_min = 0;\n            }\n            times[i] = [(\"0\" + (hh)).slice(-2) + ':' + (\"0\" + mm).slice(-2),(\"0\" + (end_hr)).slice(-2) + ':' + (\"0\" + end_min).slice(-2)];\n        }\n        else if(hh>start_hh)\n        {\n          if(hh==end_hh && mm<end_mm)\n          {\n            // console.log( \"3\",hh,mm);\n            // console.log(\"hh\",hh,start_hh);\n            // console.log(\"mm\",mm,start_mm);\n            // mm = (mm+x>=60)?0:mm+x;\n            var end_min = mm+x;\n            var end_hr = hh;\n            if(end_min>=60)\n            {\n              end_hr+=1;\n              end_min = 0;\n            }\n            times[i] = [(\"0\" + (hh)).slice(-2) + ':' + (\"0\" + mm).slice(-2),(\"0\" + (end_hr)).slice(-2) + ':' + (\"0\" + end_min).slice(-2)];\n          }\n          else if(hh<end_hh)\n          {\n            // console.log( \"2\",hh,mm);\n            // console.log(\"hh\",hh,start_hh);\n            // console.log(\"mm\",mm,start_mm);\n            // mm = (mm+x>=60)?0:mm+x;\n            // times[i] = [(\"0\" + (hh)).slice(-2) + ':' + (\"0\" + mm).slice(-2),(\"0\" + (hh)).slice(-2) + ':' + (\"0\" + mm).slice(-2)];\n            var end_min = mm+x;\n            var end_hr = hh;\n            if(end_min>=60)\n            {\n              end_hr+=1;\n              end_min = 0;\n            }\n            times[i] = [(\"0\" + (hh)).slice(-2) + ':' + (\"0\" + mm).slice(-2),(\"0\" + (end_hr)).slice(-2) + ':' + (\"0\" + end_min).slice(-2)];\n          }\n        }\n        // times[i] = (\"0\" + (hh)).slice(-2) + ':' + (\"0\" + mm).slice(-2);\n        // this.availableTimeSlots[i] = (\"0\" + (hh)).slice(-2) + ':' + (\"0\" + mm).slice(-2);\n      }\n      tt = tt + x;\n    }\n\n    for(var k in times)\n    {      \n      this.availableTimeSlots.push(times[k]);\n    }\n    \n    // console.log(this.availableTimeSlots);\n    // return times;\n  }\n\n  // get_onSearchData()\n  // {\n  //   let param = {\n  //     \"transaction_id\": this._commonService.transaction_id\n  //   }\n  //   // console.log(\"get_onSearchData\",param);\n  //   this._api.get_onSearchData(param).subscribe((res: any) => {\n  //     // console.log(\"get_onSearchData res\");\n  //     // console.log(res);\n  //     this.searchResults = [];\n  //     res.data.forEach(data => {\n  //       if(data.hasOwnProperty(\"request_body\"))\n  //       {\n  //         var results = JSON.parse(data.request_body);\n  //         console.log(results);\n  //         if(results.status_code==200 && results.hasOwnProperty(\"context\") && results.hasOwnProperty(\"message\") && results.message.hasOwnProperty(\"catalog\") && results.message.catalog.hasOwnProperty(\"providers\") && (results.message.catalog.providers).length>0)\n  //         {\n  //           (results.message.catalog.providers).forEach(provider => {\n  //             provider.fulfillments.forEach(fulfillment => {\n  //               var isDoctorAlreadyAdded = false;\n  //               for(var i=0; i<(this.searchResults).length;i++)\n  //               {\n  //                 if(this.searchResults[i].doctor_id == fulfillment.person.id)\n  //                 {\n  //                   isDoctorAlreadyAdded = true;\n  //                   break;\n  //                 }\n  //               };\n  //               if(!isDoctorAlreadyAdded)\n  //               {\n  //                 var expression = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\n  //                 var regex = new RegExp(expression);\n  //                 if(!fulfillment.person.image.match(regex)) {\n  //                   fulfillment.person.image = \"\";\n  //                 }\n  //                 this.searchResults.push({\n  //                   service_provider: results.message.catalog.descriptor.name,\n  //                   provider_id: provider.id,\n  //                   hospital_name: provider.descriptor.name,\n  //                   doctor_name: fulfillment.person.name,\n  //                   doctor_id: fulfillment.person.id,\n  //                   doctor_gender: (fulfillment.person.gender).toLowerCase(),\n  //                   doctor_img: fulfillment.person.image,\n  //                   doctor_cred: fulfillment.person.cred,\n  //                   doctor_service_type: fulfillment.type==\"NA\"?\"\":fulfillment.type,\n  //                   doctor_service_category: \"\",\n  //                   item_id: null,\n  //                   start_time: fulfillment.start,\n  //                   end_time: fulfillment.end\n  //                 });\n  //               }\n  //             });\n\n  //             provider.items.forEach(item => {\n  //               this.searchResults.forEach(doctor => {\n  //                 if(doctor.doctor_id==item.fulfillment_id)\n  //                 {\n  //                   provider.categories.forEach(category => {\n  //                     if(category.id==item.category_id)\n  //                     {\n  //                       doctor.doctor_service_category = category.descriptor.name==\"NA\"?\"\":category.descriptor.name;\n  //                       doctor.item_id = item.id;\n  //                     }\n  //                   });\n  //                 }\n  //               });\n\n  //             });\n  //           });\n  //         }\n  //       }\n  //     });\n  //     // console.log(this.searchResults);\n  //   }, (err) => {\n  //     if (err) {\n  //       console.error(err);\n  //     }\n  //   })\n  // }\n\n  // get_onSelectData()\n  // {\n  //   let param = {\n  //     \"transaction_id\": this._commonService.transaction_id\n  //   }\n  //   this._api.get_onSelectData(param).subscribe((res: any) => {\n  //     // console.log(res);\n  //     res.data.forEach(data => {\n  //       if(data.hasOwnProperty(\"request_body\"))\n  //       {\n  //         var results = JSON.parse(data.request_body);\n  //         // console.log(results);\n\n  //         this.doctorInfo = [];\n  //         if(results.status_code==200 && results.hasOwnProperty(\"context\") && results.hasOwnProperty(\"message\") && results.message.hasOwnProperty(\"order\") && results.message.order.hasOwnProperty(\"provider\"))\n  //         {\n  //           // console.log(\"------------->1\");\n            \n  //           // (results.message.order.provider).forEach(providerData => {\n  //           // console.log(\"------------->2\");\n  //           results.message.order.fulfillment.forEach(fulfillmentData => {\n  //             console.log(\"------------->3\");\n\n  //             var expression = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\n  //             var regex = new RegExp(expression);\n  //             // if(fulfillmentData.person.image!=null && !fulfillmentData.person.image.match(regex)) {\n  //             //   fulfillmentData.person.image = \"\";\n  //             // }\n\n  //             if(fulfillmentData.agent.image!=null && !fulfillmentData.agent.image.match(regex)) {\n  //               fulfillmentData.agent.image = \"\";\n  //             }\n\n  //             this.doctorInfo.push({\n  //               service_provider: results.message.order.provider.descriptor.name,\n  //               // provider_id: providerData,\n  //               // hospital_name: providerData, //.descriptor.name,\n  //               doctor_name: fulfillmentData.agent.name,\n  //               doctor_id: fulfillmentData.agent.id,\n  //               doctor_gender: (fulfillmentData.agent.gender).toLowerCase(),\n  //               doctor_img: fulfillmentData.agent.image,\n  //               doctor_cred: fulfillmentData.agent.cred,\n  //               doctor_service_type: fulfillmentData.type==\"NA\"?\"\":fulfillmentData.type,\n  //               doctor_service_category: \"\",\n  //               item_id: null,\n  //               quote: null\n  //             });\n  //           });\n\n  //           results.message.order.items.forEach(item => {\n  //             this.doctorInfo.forEach(doctor => {\n  //               if(doctor.doctor_id==item.fulfillment_id)\n  //               {\n  //                 doctor.item_id = item.id\n  //                 // results.message.order.categories.forEach(category => {\n  //                 //   if(category.id==item.category_id)\n  //                 //   {\n  //                 //     doctor.doctor_service_category = category.descriptor.name==\"NA\"?\"\":category.descriptor.name;\n  //                 //     doctor.item_id = item.id;\n  //                 //   }\n  //                 // });\n  //               }\n  //             });\n  //           });\n\n  //           this.doctorInfo[0].quote=results.message.order.quote;\n            \n  //           this.searchResults.forEach(element => {\n  //             if(element.doctor_id==this.doctorInfo[0].doctor_id)\n  //             {\n  //               this.doctorInfo[0].dd = element;\n\n  //               if(element.start_time)\n  //               {\n  //                 console.log(element.start_time.time);\n  //                 // console.log()\n  //               }\n  //             }\n  //           });\n  //           console.log(this.doctorInfo);\n  //         }\n  //       }\n  //     })\n  //   }, (err) => {\n  //     if (err) {\n  //       console.log(err);\n  //     }\n  //   })\n  // }\n\n  sortDataFromArray()\n  {\n    // console.log(this._commonService.searchResults.fulfillments[this.search_index]);\n    setTimeout(() => {\n      var date = new Date();\n      var start_time = new Date(`${date.getFullYear()}-01-01`+this._commonService.searchResults.fulfillments[this.search_index].start.time.timestamp);\n      var end_time = new Date(`${date.getFullYear()}-01-01`+this._commonService.searchResults.fulfillments[this.search_index].end.time.timestamp);\n      this.sortTimeSLots(start_time.getHours(),start_time.getMinutes(),end_time.getHours(),end_time.getMinutes());\n    }, 100);\n    \n    /*var results = this._commonService.searchResults[this.search_index]\n    console.log(results);\n\n    this.doctorInfo.push({\n      service_provider: results.service_provider,\n      provider_id: results.provider_id,\n      doctor_name: results.doctor_name,\n      doctor_id: results.doctor_id,\n      doctor_gender: (results.doctor_gender).toLowerCase(),\n      doctor_img: results.doctor_image,\n      doctor_cred: results.doctor_cred,\n      doctor_service_type: results.doctor_service_type==\"NA\"?\"\":results.doctor_service_type,\n      doctor_service_category: results.doctor_service_category,\n      item_id: results.item_id,\n      quote: results.quote,\n      start: results.start,\n      end: results.end\n    });\n\n    console.log(this.doctorInfo);*/\n    /*\n    var results = JSON.parse(data.request_body);\n          // console.log(results);\n\n          this.doctorInfo = [];\n          if(results.status_code==200 && results.hasOwnProperty(\"context\") && results.hasOwnProperty(\"message\") && results.message.hasOwnProperty(\"order\") && results.message.order.hasOwnProperty(\"provider\"))\n          {\n            // console.log(\"------------->1\");\n            \n            // (results.message.order.provider).forEach(providerData => {\n            // console.log(\"------------->2\");\n            results.message.order.fulfillment.forEach(fulfillmentData => {\n              console.log(\"------------->3\");\n\n              var expression = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\n              var regex = new RegExp(expression);\n              // if(fulfillmentData.person.image!=null && !fulfillmentData.person.image.match(regex)) {\n              //   fulfillmentData.person.image = \"\";\n              // }\n\n              if(fulfillmentData.agent.image!=null && !fulfillmentData.agent.image.match(regex)) {\n                fulfillmentData.agent.image = \"\";\n              }\n\n              this.doctorInfo.push({\n                service_provider: results.message.order.provider.descriptor.name,\n                // provider_id: providerData,\n                // hospital_name: providerData, //.descriptor.name,\n                doctor_name: fulfillmentData.agent.name,\n                doctor_id: fulfillmentData.agent.id,\n                doctor_gender: (fulfillmentData.agent.gender).toLowerCase(),\n                doctor_img: fulfillmentData.agent.image,\n                doctor_cred: fulfillmentData.agent.cred,\n                doctor_service_type: fulfillmentData.type==\"NA\"?\"\":fulfillmentData.type,\n                doctor_service_category: \"\",\n                item_id: null,\n                quote: null\n              });\n            });\n\n            results.message.order.items.forEach(item => {\n              this.doctorInfo.forEach(doctor => {\n                if(doctor.doctor_id==item.fulfillment_id)\n                {\n                  doctor.item_id = item.id\n                  // results.message.order.categories.forEach(category => {\n                  //   if(category.id==item.category_id)\n                  //   {\n                  //     doctor.doctor_service_category = category.descriptor.name==\"NA\"?\"\":category.descriptor.name;\n                  //     doctor.item_id = item.id;\n                  //   }\n                  // });\n                }\n              });\n            });\n\n            this.doctorInfo[0].quote=results.message.order.quote;\n            \n            this.searchResults.forEach(element => {\n              if(element.doctor_id==this.doctorInfo[0].doctor_id)\n              {\n                this.doctorInfo[0].dd = element;\n\n                if(element.start_time)\n                {\n                  console.log(element.start_time.time);\n                  // console.log()\n                }\n              }\n            });\n            console.log(this.doctorInfo);\n          }*/\n  }\n\n  select_slots(index:any)\n  {\n    $(\"#time_slots_div\").find('ion-chip').removeClass('bg-primary').removeClass('text-white');\n    $(\"#time_slot\"+index).addClass('bg-primary').addClass('text-white');\n  }\n\n  init()\n  {\n    var time_slot_divs = $(\"#time_slots_div\").find('ion-chip');\n    var time_slot;\n\n    var date = new Date();\n\n    for (let i = 0; i < time_slot_divs.length; i++) {\n      const element = time_slot_divs[i];\n      if($(element).hasClass('bg-primary'))\n      {\n        time_slot = $(element).find(\"ion-label\").html();\n      }\n    }\n    // console.log(time_slot);\n    var slot_start_time = time_slot.split(\" - \")[0];\n    var slot_end_time = time_slot.split(\" - \")[1];\n    // console.log(slot_start_time,slot_end_time);\n    // return;\n    var param = {\n      details: this._commonService.searchResults.fulfillments[this.search_index],\n      transaction_id: this._commonService.transaction_id,\n      slot_start_time: slot_start_time,\n      slot_end_time: slot_end_time\n    }\n    this._commonService.presentLoading();\n    this._api.init(param).subscribe((res: any) => {\n      // console.log(res);\n      if(res.success && res.body.message.ack.status==\"ACK\")\n      {\n        this._router.navigate([\"/dashboard/collect-payment\",this.search_index]);\n      }\n    }, (err) => {\n      if (err) {\n        console.error(err);\n      }\n    });\n  }\n\n}\n"]}